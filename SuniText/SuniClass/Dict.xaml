<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key = "Brush_LightMain_Background" >#FFFFFF</SolidColorBrush>
    <Color x:Key = "Color_LightMain_Background" >#FFFFFF</Color>
    <SolidColorBrush x:Key = "Brush_LightMenu_Background" >#F0F0F0</SolidColorBrush>
    <Color x:Key = "Color_LightMenu_Background" >#F0F0F0</Color>
    <SolidColorBrush x:Key = "Brush_LightMenu_Foreground" >#3A3F4B</SolidColorBrush>
    <Color x:Key = "Color_LightMenu_Foreground" >#3A3F4B</Color>
    <SolidColorBrush x:Key = "Brush_LightTBox_Background" >#E7E7E7</SolidColorBrush>
    <Color x:Key = "Color_LightTBox_Background" >#E7E7E7</Color>
    <SolidColorBrush x:Key = "Brush_LightTBox_Foreground" >#3F3F4F</SolidColorBrush>
    <Color x:Key = "Color_LightTBox_Foreground" >#3F3F4F</Color>
    <SolidColorBrush x:Key = "Brush_LightMouseOver_Background" >#DEDEDE</SolidColorBrush>
    <Color x:Key = "Color_LightMouseOver_Background" >#DEDEDE</Color>
    <SolidColorBrush x:Key = "Brush_LightMenuBorder_Background" >#D3D3D3</SolidColorBrush>
    <Color x:Key = "Color_LightMenuBorder_Background" >#D3D3D3</Color>
    <SolidColorBrush x:Key = "Brush_LightCBox_Background" >#D3D3D3</SolidColorBrush>
    <Color x:Key = "Color_LightCBox_Background" >#D3D3D3</Color>
    <SolidColorBrush x:Key="LightArrowBrush" Color="#555555"/>
    <SolidColorBrush x:Key="LightArrowOpenBrush" Color="#888888"/>

    <SolidColorBrush x:Key = "Brush_DarkMain_Background" >#242A37</SolidColorBrush>
    <Color x:Key = "Color_DarkMain_Background" >#242A37</Color>
    <SolidColorBrush x:Key = "Brush_DarkMenu_Background" >#323C46</SolidColorBrush>
    <Color x:Key = "Color_DarkMenu_Background" >#323C46</Color>
    <SolidColorBrush x:Key = "Brush_DarkMenu_Foreground" >#0096B4</SolidColorBrush>
    <Color x:Key = "Color_DarkMenu_Foreground" >#0096B4</Color>
    <SolidColorBrush x:Key = "Brush_DarkTBox_Background" >#3A3F4B</SolidColorBrush>
    <Color x:Key = "Color_DarkTBox_Background" >#3A3F4B</Color>
    <SolidColorBrush x:Key = "Brush_DarkTBox_Foreground" >#F0F0F0</SolidColorBrush>
    <Color x:Key = "Color_DarkTBox_Foreground" >#F0F0F0</Color>
    <SolidColorBrush x:Key = "Brush_DarkMouseOver_Background" >#434D57</SolidColorBrush>
    <Color x:Key = "Color_DarkMouseOver_Background" >#434D57</Color>
    <SolidColorBrush x:Key = "Brush_DarkMenuBorder_Background" >#990096B4</SolidColorBrush>
    <Color x:Key = "Color_DarkMenuBorder_Background" >#990096B4</Color>
    <SolidColorBrush x:Key = "Brush_DarkCBox_Background" >#0096B4</SolidColorBrush>
    <Color x:Key = "Color_DarkCBox_Background" >#0096B4</Color>
    <SolidColorBrush x:Key="DarkArrowBrush" Color="#FF45BCDD"/>
    <SolidColorBrush x:Key="DarkArrowOpenBrush" Color="#007acc"/>

    <SolidColorBrush x:Key = "Brush_Main_Background" >#242A37</SolidColorBrush>
    <Color x:Key = "Color_Main_Background" >#242A37</Color>
    <SolidColorBrush x:Key = "Brush_Menu_Background" >#323C46</SolidColorBrush>
    <Color x:Key = "Color_Menu_Background" >#323C46</Color>
    <SolidColorBrush x:Key = "Brush_Menu_Foreground" >#0096B4</SolidColorBrush>
    <Color x:Key = "Color_Menu_Foreground" >#0096B4</Color>
    <SolidColorBrush x:Key = "Brush_TBox_Background" >#3A3F4B</SolidColorBrush>
    <Color x:Key = "Color_TBox_Background" >#3A3F4B</Color>
    <SolidColorBrush x:Key = "Brush_TBox_Foreground" >#F0F0F0</SolidColorBrush>
    <Color x:Key = "Color_TBox_Foreground" >#F0F0F0</Color>
    <SolidColorBrush x:Key = "Brush_MouseOver_Background" >#DEDEDE</SolidColorBrush>
    <Color x:Key = "Color_MouseOver_Background" >#DEDEDE</Color>
    <SolidColorBrush x:Key = "Brush_MenuBorder_Background" >#990096B4</SolidColorBrush>
    <Color x:Key = "Color_MenuBorder_Background" >#990096B4</Color>
    <SolidColorBrush x:Key = "Brush_CBox_Background" >#0096B4</SolidColorBrush>
    <Color x:Key = "Color_CBox_Background" >#0096B4</Color>
    <SolidColorBrush x:Key="ArrowBrush" Color="#FF45BCDD"/>
    <SolidColorBrush x:Key="ArrowOpenBrush" Color="#007acc"/>

    <!-- Menu-->
    <ControlTemplate x:Key="MainMenu" TargetType="{x:Type Menu}">
        <Border BorderThickness="0" Height="25" Margin="0" 
                BorderBrush="{DynamicResource Brush_Menu_Background}"
                Background="{DynamicResource Brush_Menu_Background}"
                OverridesDefaultStyle="True">
            <StackPanel ClipToBounds="True" Orientation="Horizontal"
                        IsItemsHost="True" OverridesDefaultStyle="True" />
        </Border>
    </ControlTemplate>
    <!--TopLevelHeader-->
    <ControlTemplate x:Key="TopLevelHeader" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter ContentSource="Header" Margin="5,0,5,5"
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  SnapsToDevicePixels="True"/>
                <Popup x:Name="Popup"
                           Placement="Bottom" 
                           IsOpen="{TemplateBinding IsSubmenuOpen}" 
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" 
                                Padding="0"
                                Margin="0" MinWidth="85"
                                SnapsToDevicePixels="True" 
                                BorderThickness="0.7"
                                BorderBrush="{DynamicResource Brush_Menu_Foreground}"
                                Background="{DynamicResource Brush_Menu_Background}">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.5" Direction="315" 
                                              BlurRadius="3" ShadowDepth="5"/>
                        </Border.Effect>
                        <StackPanel IsItemsHost="True"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>

            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Brush_MouseOver_Background}"/>
            </Trigger>

            <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Brush_Menu_Background}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TopLevelItem-->
    <ControlTemplate x:Key="TopLevelItem" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1">
            <Grid>
                <ContentPresenter ContentSource="Header" Margin="0"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--SubmenuItem-->
    <ControlTemplate x:Key="SubMenuItem" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Height="20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentSource="Icon" x:Name="Icon" 
                                  VerticalAlignment="Center" SnapsToDevicePixels="True"  
                                  Opacity="1" Margin="10,0,10,0"/>
                <Border x:Name="Check" 
                          Width="16" Height="16"
                          Visibility="Collapsed"
                          Margin="6,0,6,0"
                          BorderThickness="1">
                    <Path x:Name="CheckMark"
                            Width="7" Height="7"
                            Visibility="Collapsed"
                            SnapsToDevicePixels="False"
                            Stroke="Red"
                            Data="M 0,3 L 3,7 L 7,0"/>
                </Border>
                <ContentPresenter x:Name="HeaderHost" SnapsToDevicePixels="True" VerticalAlignment="Center" Grid.Column="1" ContentSource="Header"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" VerticalAlignment="Center" FontSize="12"
                             Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush_MouseOver_Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
                <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                <Setter TargetName="CheckMark" Property="Stroke" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--SubmenuHeader-->
    <ControlTemplate x:Key="SubMenuHeader" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Height="20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="10,0,15,0" ContentSource="Icon" SnapsToDevicePixels="True"/>
                <ContentPresenter Grid.Column="1" x:Name="HeaderHost" 
                                  VerticalAlignment="Center"
                                  ContentSource="Header" SnapsToDevicePixels="True"/>
                <TextBlock x:Name="InputGestureText" 
                               Grid.Column="2" FontSize="12"
                               Text="{TemplateBinding InputGestureText}"/>
                <Path Grid.Column="3" 
                          x:Name="Arrow"
                          Fill="{DynamicResource ArrayBrush}"
                          SnapsToDevicePixels="True"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 7 L 4 3.5 Z"/>
                <Popup x:Name="Popup"
                           Placement="Right"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border x:Name="SubmenuBorder" 
                                Padding="0"
                                Margin="0" MinWidth="85"
                                SnapsToDevicePixels="True" 
                                BorderThickness="1"
                                BorderBrush="{DynamicResource Brush_Menu_Foreground}"
                                Background="{DynamicResource Brush_Menu_Background}">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.5" Direction="315" BlurRadius="3" ShadowDepth="5"/>
                        </Border.Effect>
                        <StackPanel IsItemsHost="True"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush_MouseOver_Background}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush_MouseOver_Background}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ArrowOpenBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOpen" Value="False">
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ArrowBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
                <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                <Setter TargetName="Arrow" Property="Fill" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--按钮样式-->
    <ControlTemplate x:Key="MainButton" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="5"  BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_MouseOver_Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_Menu_Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="LightGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="Foreground" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--子按钮样式-->
    <ControlTemplate x:Key="SubButton" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="0"  BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_MouseOver_Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush_Menu_Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="LightGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="Foreground" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--子按钮样式-->
    <ControlTemplate x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="0"  BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="LightGray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="Foreground" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>